apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"tekton.dev/v1beta1","kind":"ClusterTask","metadata":{"annotations":{"tekton.dev/displayName":"openshift client","tekton.dev/pipelines.minVersion":"0.17.0","tekton.dev/tags":"cli"},"labels":{"app.kubernetes.io/version":"0.2","operator.tekton.dev/provider-type":"redhat"},"name":"openshift-client","namespace":"openshift-pipelines","ownerReferences":[{"apiVersion":"operator.tekton.dev/v1alpha1","blockOwnerDeletion":true,"controller":true,"kind":"TektonInstallerSet","name":"addon-clustertasks-s48lj","uid":"70fa3466-b935-4ca2-af74-9f505d702e88"}]},"spec":{"description":"This task runs commands against the cluster provided by user and if not provided then where the Task is being executed.\nOpenShift is a Kubernetes distribution from Red Hat which provides oc, the OpenShift CLI that complements kubectl for simplifying deployment and configuration applications on OpenShift.","params":[{"default":"oc help","description":"The OpenShift CLI arguments to run","name":"SCRIPT","type":"string"},{"default":"latest","description":"The OpenShift Version to use","name":"VERSION","type":"string"}],"steps":[{"image":"image-registry.openshift-image-registry.svc:5000/openshift/cli:$(params.VERSION)","name":"oc","script":"#!/usr/bin/env bash\n\n[[ \"$(workspaces.manifest-dir.bound)\" == \"true\" ]] \u0026\u0026 \\\ncd $(workspaces.manifest-dir.path)\n\n[[ \"$(workspaces.kubeconfig-dir.bound)\" == \"true\" ]] \u0026\u0026 \\\n[[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] \u0026\u0026 \\\nexport KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig\n\n$(params.SCRIPT)\n","securityContext":{"runAsNonRoot":true,"runAsUser":65532}}],"workspaces":[{"description":"The workspace which contains kubernetes manifests which we want to apply on the cluster.","name":"manifest-dir","optional":true},{"description":"The workspace which contains the the kubeconfig file if in case we want to run the oc command on another cluster.","name":"kubeconfig-dir","optional":true}]}}
    tekton.dev/displayName: openshift client
    tekton.dev/pipelines.minVersion: 0.17.0
    tekton.dev/tags: cli
  creationTimestamp: "2022-09-21T16:45:39Z"
  generation: 1
  labels:
    app.kubernetes.io/version: "0.2"
    operator.tekton.dev/provider-type: redhat
  name: openshift-client
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TektonInstallerSet
    name: addon-clustertasks-s48lj
    uid: 70fa3466-b935-4ca2-af74-9f505d702e88
  resourceVersion: "413486677"
  uid: fa0e530a-4999-465d-b7ff-98435d2ebe62
spec:
  description: |-
    This task runs commands against the cluster provided by user and if not provided then where the Task is being executed.
    OpenShift is a Kubernetes distribution from Red Hat which provides oc, the OpenShift CLI that complements kubectl for simplifying deployment and configuration applications on OpenShift.
  params:
  - default: oc help
    description: The OpenShift CLI arguments to run
    name: SCRIPT
    type: string
  - default: latest
    description: The OpenShift Version to use
    name: VERSION
    type: string
  steps:
  - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:$(params.VERSION)
    name: oc
    resources: {}
    script: |
      #!/usr/bin/env bash

      [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
      cd $(workspaces.manifest-dir.path)

      [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
      [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
      export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

      $(params.SCRIPT)
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
  workspaces:
  - description: The workspace which contains kubernetes manifests which we want to
      apply on the cluster.
    name: manifest-dir
    optional: true
  - description: The workspace which contains the the kubeconfig file if in case we
      want to run the oc command on another cluster.
    name: kubeconfig-dir
    optional: true
